import{_ as o,C as i,c as d,o as c,a4 as p,G as t,w as l,j as e,a as s}from"./chunks/framework.sQ8wSw9M.js";const _=JSON.parse('{"title":"8. Modificació","description":"","frontmatter":{},"headers":[],"relativePath":"8-modificacio.md","filePath":"8-modificacio.md"}'),u={name:"8-modificacio.md"};function h(m,a,k,g,E,f){const n=i("PluginTabsTab"),r=i("PluginTabs");return c(),d("div",null,[a[1]||(a[1]=p('<h1 id="_8-modificacio" tabindex="-1">8. Modificació <a class="header-anchor" href="#_8-modificacio" aria-label="Permalink to &quot;8. Modificació&quot;">​</a></h1><p>Per a poder modificar les dades que conté un ResultSet necessitem un ResultSet de tipus modificable. Per a això hem d&#39;utilitzar la constant ResultSet.CONCUR_UPDATABLE en cridar al mètode createStatement() com s&#39;ha vist abans.</p><p><strong>Per a modificar els valors d&#39;un registre existent s&#39;utilitzen una sèrie de mètodes updateXXX()</strong> de ResultSet . Les XXX indiquen el tipus de la dada i hi ha tants diferents com succeeix amb els mètodes getXXX() d&#39;aquesta mateixa interfície: <strong>updateString()</strong>, <strong>updateInt()</strong>, <strong>updateDouble()</strong>, <strong>updateDate()</strong>, etc.</p><p>La diferència és que <strong>els mètodes updateXXX() necessiten dos arguments</strong>:</p><ul><li><strong>La columna que desitgem actualitzar</strong> (pel seu nom o pel seu número de columna).</li><li><strong>El valor que volem emmagatzemar</strong> en aquesta columna (del tipus que siga).</li></ul><p>Per exemple per a modificar el camp ‘edat’ emmagatzemant el sencer 28 caldria cridar al següent mètode, suposant que rs és un objecte ResultSet:</p><p><code>rs.updateInt(&quot;edat&quot;, 28);</code></p><p>També podria fer-se de la següent manera, suposant que la columna “edat” és la segona:</p><p><code>rs.updateInt(2, 28);</code></p><p>Els mètodes updateXXX() no retornen cap valor (són de tipus void). Si es produeix algun error es llançarà una SQLException.</p><p>Posteriorment <strong>cal cridar a updateRow() perquè els canvis realitzats s&#39;apliquen sobre la base de dades</strong>. El Driver JDBC s&#39;encarregarà d&#39;executar les sentències SQL necessàries. Aquesta és una característica molt potent ja que ens facilita enormement la tasca de modificar les dades d&#39;una base de dades. Aquest mètode retorna void.</p><p>En resum, el procés per a realitzar la modificació d&#39;una fila d&#39;un ResultSet és el següent:</p><ol><li><strong>Desplacem el cursor al registre</strong> que volem modificar.</li><li>Cridem a tots els mètodes <strong>updateXXX(...)</strong> que necessitem.</li><li>Cridem a updateRow() perquè els canvis s&#39;apliquen a la base de dades.</li></ol><p>És important entendre que <strong>cal cridar a updateRow() abans de desplaçar el cursor</strong>. Si desplacem el cursor abans de cridar a updateRow(), es perdran els canvis. Si volem <strong>cancel·lar les modificacions d&#39;un registre del ResultSet</strong> podem cridar a <strong>cancelRowUpdates()</strong>, que cancel·la totes les modificacions realitzades sobre el registre actual. Si ja hem anomenat a updateRow() el mètode cancelRowUpdates() no tindrà cap efecte.</p><p>El següent codi d&#39;exemple mostra com modificar el camp ‘direcció’ de l&#39;últim registre d&#39;un ResultSet que conté el resultat d&#39;un SELECT sobre la taula de clients. Suposarem que conn és un objecte Connection previament creat:</p>',15)),t(r,null,{default:l(()=>[t(n,{label:"Java"},{default:l(()=>a[0]||(a[0]=[e("div",{class:"language-java vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"java"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Creem un Statement scrollable i modificable")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"Statement stmt "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," conn."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"createStatement"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Executem un SELECT i obtenim la taula clients en un ResultSet")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"String sql "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "SELECT * FROM clients"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"ResultSet rs "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," stmt."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"executeQuery"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(sql);")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Anem a l'últim registre, el modifiquem i actualitzem la base de dades")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"rs."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"last"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"rs."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"updateString"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"direccio"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"C/ Pepe Ciges, 3"'),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"rs."),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"updateRow"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")])])])],-1)])),_:1,__:[0]})]),_:1})])}const y=o(u,[["render",h]]);export{_ as __pageData,y as default};
